---

  - name: ensures that the {{ item.database_name }} exists
    mysql_db: name={{ item.database_name }} state=present
    with_items: "{{ mysql }}"

  - name: check user
    shell: mysql -u root -e "SELECT user FROM mysql.user"
    register: check_user
    changed_when:  "'{{item.user}}' not in check_user.stdout"
    failed_when: check_user.rc != 0
    sudo: no
    with_items: "{{ mysql }}"

  - name: create remote user
    shell: mysql -u root -e "GRANT ALL PRIVILEGES ON {{item.database_name}}.* TO '{{item.user}}'@'%' IDENTIFIED BY '{{item.password}}';"
    register: remote_user
    failed_when: remote_user.rc != 0
    when: check_user|changed
    sudo: no
    with_items: "{{ mysql }}"

  - name: ensures that the user exists on postgresql
    postgresql_user: name={{ item.user }} password={{ item.password }} role_attr_flags=SUPERUSER
    with_items: "{{ postgresql }}"
    become_user: postgres

  - name: ensures that database exists on postgresql
    postgresql_db: name={{ item.database_name }} owner={{ item.user }}
    with_items: "{{ postgresql }}"
    become_user: postgres

  - name: ensures that the user exists on postgresql
    postgresql_user: db={{ item.database_name }} name={{ item.user }} password={{ item.password }} priv=ALL
    with_items: "{{ postgresql }}"
    become_user: postgres
